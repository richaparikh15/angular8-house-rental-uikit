{"ast":null,"code":"import { delay, map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.homes$ = new BehaviorSubject([]);\n    }\n    loadHomes(homeTypeFilters) {\n      this.homes$.next([]);\n      this.httpClient.get('assets/homes.json').pipe(delay(2000), map(homes => {\n        if (!homeTypeFilters.length) {\n          return homes;\n        }\n        return homes.filter(home => homeTypeFilters.includes(home.type));\n      })).subscribe(homes => {\n        this.homes$.next(homes);\n      });\n    }\n    static #_ = this.ɵfac = function DataService_Factory(t) {\n      return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DataService,\n      factory: DataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}